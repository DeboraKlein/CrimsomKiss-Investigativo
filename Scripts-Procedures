-- 📉 Etapa 3: Identificar quedas significativas nas vendas

-- 1. Criar uma procedure para detectar quedas
-- Comparar o total vendido em dias consecutivos e identificar quando há uma queda acima de um 
-- certo percentual.

CREATE PROCEDURE usp_RelatorioDiario
AS
BEGIN
    SELECT 
        V.Produto,
        CONVERT(date, V.DataVenda) AS Data,
        COUNT(*) AS TotalVendas,
        ISNULL(AVG(A.Nota), 0) AS MediaAvaliacoes,
        CASE 
            WHEN COUNT(*) < 100 OR ISNULL(AVG(A.Nota), 0) < 3 THEN '⚠️ Alerta'
            ELSE '✅ OK'
        END AS Status
    FROM Vendas V
    LEFT JOIN Avaliacoes A
        ON V.Produto = A.Produto AND CONVERT(date, V.DataVenda) = A.DataAvaliacao
    WHERE V.DataVenda = CONVERT(date, GETDATE())
    GROUP BY V.Produto, CONVERT(date, V.DataVenda);
END;

EXEC usp_RelatorioDiario;
;

CREATE PROCEDURE usp_InfluencerImpacto
AS
BEGIN
    SELECT 
        C.Influencer,
        C.Produto,
        SUM(CASE WHEN V.DataVenda >= C.DataInicio AND V.DataVenda <= C.DataFim THEN V.ValorTotal ELSE 0 END) AS VendasDuranteCampanha,
        SUM(CASE WHEN V.DataVenda < C.DataInicio THEN V.ValorTotal ELSE 0 END) AS VendasAntesCampanha,
        ROUND(
            (SUM(CASE WHEN V.DataVenda >= C.DataInicio AND V.DataVenda <= C.DataFim THEN V.ValorTotal ELSE 0 END) * 1.0) /
            NULLIF(SUM(CASE WHEN V.DataVenda < C.DataInicio THEN V.ValorTotal ELSE 0 END), 0) * 100, 2
        ) AS ImpactoPercentual
    FROM CampanhasMarketing C
    LEFT JOIN Vendas V ON C.Produto = V.Produto
    GROUP BY C.Influencer, C.Produto;
END;


EXEC usp_InfluencerImpacto

-- 📉 Alerta 3: Queda de Vendas (Procedure programada)
-- A sp_AlertaQuedaVendas entra como um alerta proativo, que pode ser agendado pra rodar 
-- diariamente.


CREATE PROCEDURE sp_AlertaQuedaVendas
AS
BEGIN
    SET NOCOUNT ON;

    WITH VendasOrdenadas AS (
        SELECT 
            DataVenda,
            SUM(Quantidade) AS TotalVendido,
            ROW_NUMBER() OVER (ORDER BY DataVenda) AS DiaID
        FROM Vendas
        GROUP BY DataVenda
    ),
    Comparacao AS (
        SELECT 
            v1.DataVenda AS DiaAtual,
            v1.TotalVendido,
            v2.TotalVendido AS TotalAnterior,
            ((v1.TotalVendido - v2.TotalVendido) * 1.0 / NULLIF(v2.TotalVendido, 0)) * 100 AS PercentualQueda
        FROM VendasOrdenadas v1
        JOIN VendasOrdenadas v2 ON v1.DiaID = v2.DiaID + 1
    )
    SELECT *
    FROM Comparacao
    WHERE PercentualQueda < -20; -- alerta para quedas acima de 20%
END;


EXEC sp_AlertaQuedaVendas;
